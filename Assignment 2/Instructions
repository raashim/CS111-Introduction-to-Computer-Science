Write 3 programs and submit on Autolab.

We provide this zip file containing LargestOfFive.java, CheckDigit.java, and RandomWalker.java. For each problem update and submit the corresponding file.

Observe the following rules:

DO NOT add any import statements
DO NOT add the project statement
DO NOT change the class name
DO NOT change the headers of ANY of the given methods
DO NOT add any new class fields
DO NOT use System.exit()
ONLY print the result as specified by each problem. DO NOT print other messages, follow the examples for each problem.

Largest of five (20 points). Write an algorithm that read 5 distinct integers and displays the largest value. Assume the input values are distinct integers.
java LargestOfFive 17 23 5 1 6
23

java LargestOfFive 8 3 -8 4 1
8

Check digit  (30 points). Write a program CheckDigit.java that takes a 12 or 13-digit long as a command-line argument and displays the digit computed as follows:
Take for an example the number 048231312622
Sum every other digit of the code, starting from the right.  In the example, that is 2 + 6 + 1 + 1 + 2 + 4 = 16.  Discard the tens digit and keep the ones digit, 6. 
Start with the second to last digit and do the same thing.  Sum the digits, discard the tens digit and keep the ones digit.  In this example this is 2 + 2 + 3 + 3 + 8 + 0=18.  Discarding the 10 leaves 8.  Multiply this number by 3 and again discard the tens digit.  8Ã—3 = 24, leaving 4.
Add the numbers from steps 1 and 2.  Again drop the tens digit.  6 + 4 = 10, leaving the digit 0 (zero).
Hint 1: the maximum value that can be stored in an integer variable is 2147483647 which is only 10 digits long. To read a 12 or 13-digit integer from command line argument you will need to store it in a long variable. Use: long number = Long.parseLong(args[0]); to read a long from the command line.
Hint 2: to extract the rightmost digit of a number use the modulus operator.
Hint 3: to remove the rightmost digit of a number use the integer division by 10
Hint 4: for full credit use a loop to compute the sums
Assume the input value used to test your program is a 12 or 13-digit positive integer. 
java CheckDigit 048231312622
0

java CheckDigit 9780470454310
8

Two-dimensional random walk (20 points). A two-dimensional random walk simulates the behavior of a particle moving in a grid of points. At each step, the random walker moves north, south, east, or west with probability equal to 1/4, independent of previous moves. Write a program RandomWalker.java that takes an int command-line argument n and simulates the motion of a random walk for n steps. Print the location at each step (including the starting point), treating the starting point as the origin (0, 0). Also, print the square of the final squared Euclidean distance from the origin as double.
Note: you do not need arrays for this problem, just keep track of the x and y coordinates during the random walk.
java RandomWalker 20
(0,0)
(0,1)
(-1,1)
(-1,2)
(0,2)
(1,2)
(1,3)
(0,3)
(-1,3)
(-2,3)
(-3,3)
(-3,2)
(-4,2)
(-4,1)
(-3,1)
(-3,0)
(-4,0)
(-4,-1)
(-3,-1)
(-3,-2)
(-3,-3)
Squared distance = 18.0
